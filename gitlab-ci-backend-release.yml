image: docker:stable

services:
  - docker:dind
variables:
  GIT_SUBMODULE_STRATEGY: normal
  GIT_DEPTH: 0 
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2

stages:
  - build
  - buildDocker
  - codeScan

before_script:
  - echo `pwd` # debug
  - echo "$CI_BUILD_NAME, $CI_BUILD_REF_NAME $CI_BUILD_STAGE" # debug
  - export GRADLE_USER_HOME=`pwd`/.gradle

#cache:
#  paths:
#    - .gradle/wrapper
#    - .gradle/caches

# ------------------------ BUILD ------------------------
#build:
#  image: openjdk:17-jdk-alpine3.14
#  stage: build
#  script:
#    - apk --no-cache add git
#    - apk add ttf-dejavu
#    - apk add --no-cache fontconfig
#    - ln -s /usr/lib/libfontconfig.so.1 /usr/lib/libfontconfig.so && ln -s /lib/libuuid.so.1 /usr/lib/libuuid.so.1 && ln -s /lib/libc.musl-x86_64.so.1 /usr/lib/libc.musl-x86_64.so.1
#    - LD_LIBRARY_PATH=/usr/lib
#    - git submodule update --remote -f
#    - date
#    - ./gradlew clean assemble
#    - date    
#  retry: 1
#  only:
#    - master
#    - /^release-.*$/
#    - /^gitlab-.*$/    
#  artifacts:
#    paths:
#      - build/libs/*.jar
#    expire_in: 1 week

build_and_test:manual:
  image: openjdk:17-jdk-alpine3.14
  stage: build
  script:
    - apk --no-cache add git
    - apk add ttf-dejavu
    - apk add --no-cache fontconfig
    - ln -s /usr/lib/libfontconfig.so.1 /usr/lib/libfontconfig.so && ln -s /lib/libuuid.so.1 /usr/lib/libuuid.so.1 && ln -s /lib/libc.musl-x86_64.so.1 /usr/lib/libc.musl-x86_64.so.1
    - LD_LIBRARY_PATH=/usr/lib
    - git submodule update --remote -f --init
#    - mkdir -p build/reports/profile
    - ./gradlew clean test
#    - cat build/reports/profile/profile-*.html
  retry: 1
  when: manual
  allow_failure: false
  except:
    - tags
    - master
    - /^release-.*$/
#  artifacts:
#    paths:
#      - build/libs/*.jar
#    expire_in: 1 week

# ------------------------ TEST ------------------------
# This is always triggered in master and branch that start with 'release-'

#test:trigger:
#  image: openjdk:17-jdk-alpine3.14
#  stage: test
#  script:
#    - date    
#    - echo "$CI_BUILD_NAME, $CI_BUILD_REF_NAME $CI_BUILD_STAGE"
#    - echo "This is just entry point to running the test."
#    - apk --no-cache add git
#    - apk add ttf-dejavu
#    - apk add --no-cache fontconfig
#    - ln -s /usr/lib/libfontconfig.so.1 /usr/lib/libfontconfig.so && ln -s /lib/libuuid.so.1 /usr/lib/libuuid.so.1 && ln -s /lib/libc.musl-x86_64.so.1 /usr/lib/libc.musl-x86_64.so.1
#    - LD_LIBRARY_PATH=/usr/lib    
#    - date    
#    - git submodule update --remote -f
#    - date    
#    - ./gradlew clean test
#    - date    
#  retry: 1
#  only:
#    - master
#    - /^release-.*$/
#    - /^gitlab-.*$/    

# This is manually triggered for all other branches
#test:trigger:manual:
#  image: openjdk:17-jdk-alpine3.14
#  stage: test
#  script:
#    - echo "$CI_BUILD_NAME, $CI_BUILD_REF_NAME $CI_BUILD_STAGE"
#    - echo "This is just entry point to running the test."
#    - apk --no-cache add git
#    - apk add ttf-dejavu
#    - apk add --no-cache fontconfig
#    - ln -s /usr/lib/libfontconfig.so.1 /usr/lib/libfontconfig.so && ln -s /lib/libuuid.so.1 /usr/lib/libuuid.so.1 && ln -s /lib/libc.musl-x86_64.so.1 /usr/lib/libc.musl-x86_64.so.1
#    - LD_LIBRARY_PATH=/usr/lib    
#    - git submodule update --remote -f
#    - ./gradlew test
#  when: manual
#  allow_failure: false
#  except:
#    - tags
#    - master
#    - /^release-.*$/

# ------------------------ BUILD DOCKER ------------------------
buildDocker:
  image: openjdk:17-jdk-alpine3.14
  stage: buildDocker
  before_script:
    - echo "CI_COMMIT_TAG = $CI_COMMIT_TAG"
    - apk --no-cache add git
    - git submodule update --remote -f --init
    - apk add docker
    - docker login -u b2papp -p $ecrToken b2papp.azurecr.io
    - echo b2papp.azurecr.io/b2p/$SERVICENAME:$CI_COMMIT_TAG
  script:
    - find ./src/main/resources -name "application.yml" -exec rm {} \;
    - find ./src/main/resources -name "application.properties" -exec rm {} \;    
    - date    
#    - ./gradlew clean assemble
#    - date    
    - ./gradlew jib --image=b2papp.azurecr.io/b2p/$SERVICENAME:$CI_COMMIT_TAG
    - ./gradlew jib --image=972447975928.dkr.ecr.ap-southeast-1.amazonaws.com/$SERVICENAME:$CI_COMMIT_TAG
    - date    
  rules:
    - if: '$CI_COMMIT_TAG != null && $CI_COMMIT_TAG != "" && $CI_COMMIT_TAG !~ /.*SONAR*/'    
#  only:
#    - tags

codeScan:
  image: openjdk:17-jdk-alpine3.14
  stage: codeScan
#  dependencies:
#    - buildDocker
  before_script:
    - find ./src/main/resources -name "application.yml" -exec rm {} \;
    - find ./src/main/resources -name "application.properties" -exec rm {} \;        
    - apk --no-cache add git
    - echo "CI_COMMIT_TAG = $CI_COMMIT_TAG"
    - git submodule update --remote -f --init
  script:
    - ./gradlew sonarqube -Dsonar.login=$SONARQUBE_TOKEN -Dsonar.projectName=$CI_COMMIT_TAG -Dsonar.projectKey=$SERVICENAME
  rules:
    - if: '$CI_COMMIT_TAG != null && $CI_COMMIT_TAG != "" && $CI_COMMIT_TAG =~ /.*SONAR*/'
#  only:
#    - tags  

