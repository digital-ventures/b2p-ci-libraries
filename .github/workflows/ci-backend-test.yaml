on:
  workflow_call:
jobs:
  Test:
    # runs-on: ubuntu-latest
    runs-on: [self-hosted, b2p]
    container: openjdk:17-jdk-alpine3.14
    steps:
      - name: AddAPK
        run: apk --no-cache add git jq tar openssh

      - uses: actions/checkout@v3
        with: 
          ssh-key: "${{ secrets.SSH_PRIVATE_KEY }}"
          ssh-strict: 'StrictHostKeyChecking=no'
          submodules: 'true'   #set-safe-directory option of checkout didn't work

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: GitConfig
        run: |
          git config --global user.name ${{ secrets.B2P_GIT_USER }}
          git config --global user.email ${{ secrets.B2P_GIT_USER }}@dv.co.th
          git config --global --add safe.directory /__w/b2p-${{ secrets.B2P_SERVICENAME }}/b2p-${{ secrets.B2P_SERVICENAME }}

      - name: GitSubmodule
        run: |
          git submodule sync
          git submodule update --remote -f --init

      - name: DockerLogin
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.B2P_ACR_REGISTRY }}
          username: ${{ secrets.B2P_ACR_USER }}
          password: ${{ secrets.B2P_ACR_TOKEN }}

      - name: SonarQubeScan
        if: contains(github.ref_name, 'SONAR')
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.B2P_SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.B2P_SONARQUBE_HOST_URL }}
          LC_ALL: "en_US.UTF-8"
        with:
          projectBaseDir: src
          args: >
            -Dsonar.projectName=B2P-${{ secrets.B2P_SERVICENAME }}
            -Dsonar.projectKey=${{ secrets.B2P_SERVICENAME }}

      - name: PreCleanTest
        run: |
          apk add --no-cache ttf-dejavu fontconfig 
          ln -s /usr/lib/libfontconfig.so.1 /usr/lib/libfontconfig.so
          ln -s /lib/libuuid.so.1 /usr/lib/libuuid.so.1
          ln -s /lib/libc.musl-x86_64.so.1 /usr/lib/libc.musl-x86_64.so.1

      - name: CleanTest
        uses: gradle/gradle-build-action@v2
        env: 
          LD_LIBRARY_PATH: /usr/lib
        with:
          gradle-version: 7.2
          arguments: |
              clean test
